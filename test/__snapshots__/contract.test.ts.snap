// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contract should compile Solidity Contract 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fArtifactHashF1B4A2FB": Object {
      "Description": "Artifact hash for asset \\"1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8f\\"",
      "Type": "String",
    },
    "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fS3BucketBD7C0E9C": Object {
      "Description": "S3 bucket for asset \\"1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8f\\"",
      "Type": "String",
    },
    "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fS3VersionKey58EC66BF": Object {
      "Description": "S3 key for asset version \\"1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8f\\"",
      "Type": "String",
    },
    "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dArtifactHash7A88F98A": Object {
      "Description": "Artifact hash for asset \\"3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0d\\"",
      "Type": "String",
    },
    "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dS3Bucket6EBEE593": Object {
      "Description": "S3 bucket for asset \\"3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0d\\"",
      "Type": "String",
    },
    "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dS3VersionKey6C0EFEA9": Object {
      "Description": "S3 key for asset version \\"3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0d\\"",
      "Type": "String",
    },
    "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6ArtifactHashF05AEE79": Object {
      "Description": "Artifact hash for asset \\"8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6\\"",
      "Type": "String",
    },
    "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6S3BucketC7341389": Object {
      "Description": "S3 bucket for asset \\"8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6\\"",
      "Type": "String",
    },
    "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6S3VersionKeyA9FED76A": Object {
      "Description": "S3 key for asset version \\"8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ChainCluster46039767": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ChainLoadBalancer73DB9715": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internal",
        "Subnets": Array [
          Object {
            "Ref": "ChainVPCPrivateSubnet1Subnet6ED624CD",
          },
          Object {
            "Ref": "ChainVPCPrivateSubnet2Subnet60922772",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ChainLoadBalancerNodeListenerE8956050": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ChainLoadBalancerNodeListenerECSGroup511DA7FD",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "ChainLoadBalancer73DB9715",
        },
        "Port": 8545,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ChainLoadBalancerNodeListenerECSGroup511DA7FD": Object {
      "Properties": Object {
        "Port": 8545,
        "Protocol": "TCP",
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ChainNode9D20C92C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "-m",
              "\\"indoor dish desk flag debris potato excuse depart ticket judge file exit\\"",
            ],
            "Essential": true,
            "Image": "trufflesuite/ganache-cli",
            "Name": "Ganache",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8545,
                "HostPort": 8545,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "Family": "TestChainNode8A439E2F",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "ChainNodeTaskRoleD83E9270",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "ChainNodeTaskRoleD83E9270": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ChainService3DE7863D": Object {
      "DependsOn": Array [
        "ChainLoadBalancerNodeListenerECSGroup511DA7FD",
        "ChainLoadBalancerNodeListenerE8956050",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ChainCluster46039767",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "Ganache",
            "ContainerPort": 8545,
            "TargetGroupArn": Object {
              "Ref": "ChainLoadBalancerNodeListenerECSGroup511DA7FD",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ChainServiceSecurityGroupC2B4B00F",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "ChainVPCPrivateSubnet1Subnet6ED624CD",
              },
              Object {
                "Ref": "ChainVPCPrivateSubnet2Subnet60922772",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "ChainNode9D20C92C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ChainServiceSecurityGroupC2B4B00F": Object {
      "Properties": Object {
        "GroupDescription": "Test/Chain/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ChainVPC8A02D304": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ChainVPCIGWE1EB79ED": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ChainVPCPrivateSubnet1DefaultRoute9A1BE2C9": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ChainVPCPublicSubnet1NATGateway52F19AA6",
        },
        "RouteTableId": Object {
          "Ref": "ChainVPCPrivateSubnet1RouteTable2A9CFC20",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ChainVPCPrivateSubnet1RouteTable2A9CFC20": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ChainVPCPrivateSubnet1RouteTableAssociation8BC76356": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ChainVPCPrivateSubnet1RouteTable2A9CFC20",
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPrivateSubnet1Subnet6ED624CD",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ChainVPCPrivateSubnet1Subnet6ED624CD": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ChainVPCPrivateSubnet2DefaultRoute45BD4686": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ChainVPCPublicSubnet2NATGateway4E2F62CC",
        },
        "RouteTableId": Object {
          "Ref": "ChainVPCPrivateSubnet2RouteTable08787F91",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ChainVPCPrivateSubnet2RouteTable08787F91": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ChainVPCPrivateSubnet2RouteTableAssociation7F119E2D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ChainVPCPrivateSubnet2RouteTable08787F91",
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPrivateSubnet2Subnet60922772",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ChainVPCPrivateSubnet2Subnet60922772": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ChainVPCPublicSubnet1DefaultRoute541094E9": Object {
      "DependsOn": Array [
        "ChainVPCVPCGWD2366872",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ChainVPCIGWE1EB79ED",
        },
        "RouteTableId": Object {
          "Ref": "ChainVPCPublicSubnet1RouteTableCC01E3A6",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ChainVPCPublicSubnet1EIP6AE95E94": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ChainVPCPublicSubnet1NATGateway52F19AA6": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ChainVPCPublicSubnet1EIP6AE95E94",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPublicSubnet1Subnet959FCBA5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ChainVPCPublicSubnet1RouteTableAssociationF6023A9F": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ChainVPCPublicSubnet1RouteTableCC01E3A6",
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPublicSubnet1Subnet959FCBA5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ChainVPCPublicSubnet1RouteTableCC01E3A6": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ChainVPCPublicSubnet1Subnet959FCBA5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ChainVPCPublicSubnet2DefaultRouteD0EC39C0": Object {
      "DependsOn": Array [
        "ChainVPCVPCGWD2366872",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ChainVPCIGWE1EB79ED",
        },
        "RouteTableId": Object {
          "Ref": "ChainVPCPublicSubnet2RouteTable6DA6D5E5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ChainVPCPublicSubnet2EIP2C221709": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ChainVPCPublicSubnet2NATGateway4E2F62CC": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ChainVPCPublicSubnet2EIP2C221709",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPublicSubnet2SubnetB7B65459",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ChainVPCPublicSubnet2RouteTable6DA6D5E5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ChainVPCPublicSubnet2RouteTableAssociation9EA0AF6F": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ChainVPCPublicSubnet2RouteTable6DA6D5E5",
        },
        "SubnetId": Object {
          "Ref": "ChainVPCPublicSubnet2SubnetB7B65459",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ChainVPCPublicSubnet2SubnetB7B65459": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Test/Chain/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ChainVPCVPCGWD2366872": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ChainVPCIGWE1EB79ED",
        },
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "ContractD86C0185": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ChainID": 1,
        "ChainName": "Ethereum",
        "ContractBucketName": Object {
          "Ref": "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dS3Bucket6EBEE593",
        },
        "ContractObjectKey": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dS3VersionKey6C0EFEA9",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters3a9bc48b77e4f214689b6d120034c8f3ff8a764853fffe07d7f458d895f3bd0dS3VersionKey6C0EFEA9",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
        "RpcUrl": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://",
              Object {
                "Fn::GetAtt": Array [
                  "ChainLoadBalancer73DB9715",
                  "DNSName",
                ],
              },
            ],
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ContractDeployer5241631F",
            "Arn",
          ],
        },
        "WalletSecretArn": Object {
          "Ref": "WalletPrivateKey1C295680",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ContractDeployer5241631F": Object {
      "DependsOn": Array [
        "ContractDeployerServiceRoleDefaultPolicy53F0D499",
        "ContractDeployerServiceRole4D541F12",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fS3BucketBD7C0E9C",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fS3VersionKey58EC66BF",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1275445d1635b2e704918b7e9038061dd6246c26c4f37a012d55431159a9be8fS3VersionKey58EC66BF",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handle",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "ContractDeployerServiceRole4D541F12",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "ContractDeployerSecurityGroup73A1A704",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "ChainVPCPrivateSubnet1Subnet6ED624CD",
            },
            Object {
              "Ref": "ChainVPCPrivateSubnet2Subnet60922772",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ContractDeployerSecurityGroup73A1A704": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function TestContractDeployer5F78E0FF",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ChainVPC8A02D304",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ContractDeployerServiceRole4D541F12": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ContractDeployerServiceRoleDefaultPolicy53F0D499": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WalletEncryptionKey8455325D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "WalletPrivateKey1C295680",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ContractDeployerServiceRoleDefaultPolicy53F0D499",
        "Roles": Array [
          Object {
            "Ref": "ContractDeployerServiceRole4D541F12",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonLambdaethereumwalletkeygenerator6D364F19": Object {
      "DependsOn": Array [
        "SingletonLambdaethereumwalletkeygeneratorServiceRoleDefaultPolicy8697E031",
        "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6S3BucketC7341389",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6S3VersionKeyA9FED76A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8a47457348a1cadc002d3a757a74d8487d7c254569bf4db058ff38e5d6287fd6S3VersionKeyA9FED76A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handle",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonLambdaethereumwalletkeygeneratorServiceRoleDefaultPolicy8697E031": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WalletEncryptionKey8455325D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "WalletPrivateKey1C295680",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonLambdaethereumwalletkeygeneratorServiceRoleDefaultPolicy8697E031",
        "Roles": Array [
          Object {
            "Ref": "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Wallet1C6771ED": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SingletonLambdaethereumwalletkeygenerator6D364F19",
            "Arn",
          ],
        },
        "WalletSecretArn": Object {
          "Ref": "WalletPrivateKey1C295680",
        },
      },
      "Type": "Custom::Wallet",
      "UpdateReplacePolicy": "Delete",
    },
    "WalletEncryptionKey8455325D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Encryption Key securing the Wallet.",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:CreateGrant",
                "kms:DescribeKey",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "SingletonLambdaethereumwalletkeygeneratorServiceRole2F4D5D5C",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "ContractDeployerServiceRole4D541F12",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": "kms:Decrypt",
              "Condition": Object {
                "StringEquals": Object {
                  "kms:ViaService": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "secretsmanager.",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ".amazonaws.com",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "ContractDeployerServiceRole4D541F12",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "WalletPrivateKey1C295680": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "GenerateSecretString": Object {},
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "WalletEncryptionKey8455325D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
